patch-package
--- a/node_modules/react-native-navigation/docs/docs/layout-types.md
+++ b/node_modules/react-native-navigation/docs/docs/layout-types.md
@@ -10,7 +10,7 @@ Component layout holds a single react component.
 
 ```js
 const component = {
-  id: 'component1', // Optional, Auto generated if empty
+  id: 'comopnent1', // Optional, Auto generated if empty
   name: 'Your registered component name',
   options: {},
   passProps: {
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/docs/docs/layout-types.md.rej
@@ -0,0 +1,10 @@
+diff a/node_modules/react-native-navigation/docs/docs/layout-types.md b/node_modules/react-native-navigation/docs/docs/layout-types.md	(rejected hunks)
+@@ -10,7 +10,7 @@ Component layout holds a single react component.
+
+ ```js
+ const component = {
+-  id: 'component1', // Optional, Auto generated if empty
++  id: 'comopnent1', // Optional, Auto generated if empty
+   name: 'Your registered component name',
+   options: {},
+   passProps: {
--- a/node_modules/react-native-navigation/lib/android/app/build.gradle
+++ b/node_modules/react-native-navigation/lib/android/app/build.gradle
@@ -2,7 +2,7 @@ apply plugin: 'com.android.library'
 apply from: '../prepare-robolectric.gradle'
 
 android {
-    compileSdkVersion 26
+    compileSdkVersion 25
     buildToolsVersion '27.0.3'
 
     defaultConfig {
@@ -66,9 +66,9 @@ allprojects { p ->
 
 dependencies {
     implementation fileTree(include: ['*.jar'], dir: 'libs')
-    implementation 'com.android.support:design:26.1.0'
-    implementation 'com.android.support:appcompat-v7:26.1.0'
-    implementation 'com.android.support:support-v4:26.1.0'
+    implementation 'com.android.support:design:25.4.0'
+    implementation 'com.android.support:appcompat-v7:25.4.0'
+    implementation 'com.android.support:support-v4:25.4.0'
     implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'
     implementation 'com.github.clans:fab:1.6.4'
 
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/android/app/build.gradle.rej
@@ -0,0 +1,22 @@
+diff a/node_modules/react-native-navigation/lib/android/app/build.gradle b/node_modules/react-native-navigation/lib/android/app/build.gradle	(rejected hunks)
+@@ -2,7 +2,7 @@ apply plugin: 'com.android.library'
+ apply from: '../prepare-robolectric.gradle'
+
+ android {
+-    compileSdkVersion 26
++    compileSdkVersion 25
+     buildToolsVersion '27.0.3'
+
+     defaultConfig {
+@@ -66,9 +66,9 @@ allprojects { p ->
+
+ dependencies {
+     implementation fileTree(include: ['*.jar'], dir: 'libs')
+-    implementation 'com.android.support:design:26.1.0'
+-    implementation 'com.android.support:appcompat-v7:26.1.0'
+-    implementation 'com.android.support:support-v4:26.1.0'
++    implementation 'com.android.support:design:25.4.0'
++    implementation 'com.android.support:appcompat-v7:25.4.0'
++    implementation 'com.android.support:support-v4:25.4.0'
+     implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'
+     implementation 'com.github.clans:fab:1.6.4'
--- a/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.h
@@ -1,6 +1,7 @@
 #import <Foundation/Foundation.h>
 #import <React/RCTBridge.h>
 #import "RNNBridgeManagerDelegate.h"
+#import "RNNStore.h"
 
 typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBridge* bridge);
 
@@ -11,5 +12,6 @@ typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBri
 - (void)registerExternalComponent:(NSString *)name callback:(RNNExternalViewCreator)callback;
 
 @property (readonly, nonatomic, strong) RCTBridge *bridge;
+@property (readonly, nonatomic, strong) RNNStore *store;
 
 @end
--- a/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.m
@@ -12,6 +12,7 @@
 @interface RNNBridgeManager() <RCTBridgeDelegate>
 
 @property (nonatomic, strong, readwrite) RCTBridge *bridge;
+@property (nonatomic, strong, readwrite) RNNStore *store;
 
 @end
 
--- a/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
@@ -107,6 +107,25 @@ -(void)push:(NSString*)componentId layout:(NSDictionary*)layout completion:(RNNT
 		if([vc isKindOfClass:[RNNRootViewController class]]) {
 			RNNRootViewController* rootVc = (RNNRootViewController*)vc;
 			rootVc.previewController = newVc;
+            rootVc.previewCallback = ^(UIViewController *vcc) {
+                    RNNRootViewController* rvc  = (RNNRootViewController*)vcc;
+                    NSDictionary * params = @{
+                                              @"previewComponentId": newVc.componentId,
+                                              @"componentId": rvc.componentId
+                                              };
+                if (newVc.options.preview.commit) {
+                    [_eventEmitter sendOnNavigationEvent:@"previewCommit" params:params];
+                    [CATransaction begin];
+                    [CATransaction setCompletionBlock:^{
+                        [_eventEmitter sendOnNavigationCommandCompletion:push params:@{@"componentId": componentId}];
+                                    completion();
+                    }];
+                    [rvc.navigationController pushViewController:newVc animated:YES];
+                    [CATransaction commit];
+                } else {
+                    [_eventEmitter sendOnNavigationEvent:@"previewDismissed" params:params];
+                }
+            };
 
 			RNNElementFinder* elementFinder = [[RNNElementFinder alloc] initWithFromVC:vc];
 			RNNElementView* elementView = [elementFinder findElementForId:newVc.options.preview.elementId];
--- a/node_modules/react-native-navigation/lib/ios/RNNRootViewController.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewController.h
@@ -12,6 +12,7 @@
 @class RNNRootViewController;
 
 typedef void (^RNNReactViewReadyCompletionBlock)(void);
+typedef void(^PreviewCallback)(UIViewController *vc);
 
 @interface RNNRootViewController : UIViewController	<RNNRootViewProtocol, UIViewControllerPreviewingDelegate, UISearchResultsUpdating>
 
@@ -22,7 +23,7 @@ typedef void (^RNNReactViewReadyCompletionBlock)(void);
 @property (nonatomic) id<RNNRootViewCreator> creator;
 @property (nonatomic, strong) RNNAnimator* animator;
 @property (nonatomic, strong) UIViewController* previewController;
-
+@property (nonatomic, copy) PreviewCallback previewCallback;
 
 -(instancetype)initWithName:(NSString*)name
 				withOptions:(RNNNavigationOptions*)options
--- a/node_modules/react-native-navigation/lib/ios/RNNRootViewController.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewController.m
@@ -22,6 +22,8 @@ @interface RNNRootViewController() {
 
 @implementation RNNRootViewController
 
+@synthesize previewCallback;
+
 -(instancetype)initWithName:(NSString*)name
 				withOptions:(RNNNavigationOptions*)options
 			withComponentId:(NSString*)componentId
@@ -61,6 +63,7 @@ -(void)viewWillAppear:(BOOL)animated{
 	[super viewWillAppear:animated];
 	[self.options applyOn:self];
 	[self optionsUpdated];
+    [self updateNavBarHeight];
 }
 
 -(void)viewDidAppear:(BOOL)animated {
@@ -71,6 +74,12 @@ -(void)viewDidAppear:(BOOL)animated {
 			self.navigationItem.hidesSearchBarWhenScrolling = YES;
 		}
 	}
+    [self updateNavBarHeight];
+}
+
+-(void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation {
+    NSLog(@"Rotate");
+    [self updateNavBarHeight];
 }
 
 - (void)viewWillDisappear:(BOOL)animated {
@@ -124,8 +133,26 @@ - (void)mergeOptions:(NSDictionary *)options {
 	[self.options mergeIfEmptyWith:options];
 }
 
+- (void)updateNavBarHeight {
+    if (self.options.topBar.height) {
+        CGFloat height = [self.options.topBar.height doubleValue];
+        if (@available(iOS 11.0, *)) {
+            CGRect viewFrame = self.navigationController.navigationBar.frame;
+            viewFrame.size.height += height;
+            for (UIView *subview in self.navigationController.navigationBar.subviews) {
+                CGRect subViewFrame = subview.frame;
+                subViewFrame.size.height += height;
+                [subview setFrame: subViewFrame];
+            }
+        } else {
+            [self.navigationController.navigationBar setFrame:CGRectMake(0, 0, self.view.frame.size.width, self.navigationController.navigationBar.frame.size.height + height)];
+        }
+    }
+}
+
 - (void)setCustomNavigationTitleView {
 	if (!_customTitleView) {
+        [self updateNavBarHeight];
 		if (self.options.topBar.title.component.name) {
 			RCTRootView *reactView = (RCTRootView*)[_creator createRootViewFromComponentOptions:self.options.topBar.title.component];
 			
@@ -147,12 +174,12 @@ - (void)setCustomNavigationTitleView {
 - (void)setCustomNavigationBarView {
 	if (!_customTopBar) {
 		if (self.options.topBar.component.name) {
-			RCTRootView *reactView = (RCTRootView*)[_creator createRootViewFromComponentOptions:self.options.topBar.component];
-			
-			_customTopBar = [[RNNCustomTitleView alloc] initWithFrame:self.navigationController.navigationBar.bounds subView:reactView alignment:@"fill"];
-			reactView.backgroundColor = UIColor.clearColor;
-			_customTopBar.backgroundColor = UIColor.clearColor;
-			[self.navigationController.navigationBar addSubview:_customTopBar];
+            [self updateNavBarHeight];
+            RCTRootView *reactView = (RCTRootView*)[_creator createRootViewFromComponentOptions:self.options.topBar.component];
+            _customTopBar = [[RNNCustomTitleView alloc] initWithFrame:self.navigationController.navigationBar.bounds subView:reactView alignment:@"fill"];
+            reactView.backgroundColor = UIColor.clearColor;
+            _customTopBar.backgroundColor = UIColor.clearColor;
+            [self.navigationController.navigationBar addSubview:_customTopBar];
 		} else if ([[self.navigationController.navigationBar.subviews lastObject] isKindOfClass:[RNNCustomTitleView class]] && !_customTopBar) {
 			[[self.navigationController.navigationBar.subviews lastObject] removeFromSuperview];
 		}
@@ -276,28 +303,22 @@ - (void)orientationDidChange:(NSNotification*)notification {
 
 - (UIViewController *)previewingContext:(id<UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location{
 	if (self.previewController) {
-		RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
-		[_eventEmitter sendOnNavigationEvent:@"previewContext" params:@{
-																		@"previewComponentId": vc.componentId,
-																		@"componentId": self.componentId
-																		}];
+        if ([self.previewController isKindOfClass:[RNNRootViewController class]]) {
+            RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
+            [_eventEmitter sendOnNavigationEvent:@"previewContext" params:@{
+                                                                            @"previewComponentId": vc.componentId,
+                                                                            @"componentId": self.componentId
+                                                                            }];
+        }
 	}
 	return self.previewController;
 }
 
 
 - (void)previewingContext:(id<UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit {
-	RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
-	NSDictionary * params = @{
-							  @"previewComponentId": vc.componentId,
-							  @"componentId": self.componentId
-							  };
-	if (vc.options.preview.commit) {
-		[_eventEmitter sendOnNavigationEvent:@"previewCommit" params:params];
-		[self.navigationController pushViewController:vc animated:false];
-	} else {
-		[_eventEmitter sendOnNavigationEvent:@"previewDismissed" params:params];
-	}
+    if (self.previewCallback) {
+        self.previewCallback(self);
+    }
 }
 
 - (void)onActionPress:(NSString *)id {
--- a/node_modules/react-native-navigation/lib/ios/RNNRootViewProtocol.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewProtocol.h
@@ -8,10 +8,10 @@
 - (void)performOnRotation:(void (^)(void))block;
 - (void)optionsUpdated;
 - (void)applyModalOptions;
-- (BOOL)isCustomTransitioned;
-- (RNNNavigationOptions*)options;
 
 @required
+- (BOOL)isCustomTransitioned;
+- (RNNNavigationOptions*)options;
 - (NSString *)componentId;
 
 @end
new file mode 100644
--- /dev/null
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewProtocol.h.rej
@@ -0,0 +1,14 @@
+diff a/node_modules/react-native-navigation/lib/ios/RNNRootViewProtocol.h b/node_modules/react-native-navigation/lib/ios/RNNRootViewProtocol.h	(rejected hunks)
+@@ -8,10 +8,10 @@
+ - (void)performOnRotation:(void (^)(void))block;
+ - (void)optionsUpdated;
+ - (void)applyModalOptions;
+-- (BOOL)isCustomTransitioned;
+-- (RNNNavigationOptions*)options;
+
+ @required
++- (BOOL)isCustomTransitioned;
++- (RNNNavigationOptions*)options;
+ - (NSString *)componentId;
+
+ @end
--- a/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.h
@@ -20,6 +20,7 @@
 @property (nonatomic, strong) NSNumber* blur;
 @property (nonatomic, strong) NSNumber* animate;
 @property (nonatomic, strong) NSString* testID;
+@property (nonatomic, strong) NSNumber* height;
 @property (nonatomic, strong) RNNLargeTitleOptions* largeTitle;
 @property (nonatomic, strong) RNNTitleOptions* title;
 @property (nonatomic, strong) RNNSubtitleOptions* subtitle;
--- a/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.h
+++ b/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.h
@@ -15,4 +15,6 @@ typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBri
 
 + (RCTBridge *)getBridge;
 
++ (UIViewController *)findViewController:(NSString *)componentId;
+
 @end
--- a/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.m
+++ b/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.m
@@ -31,6 +31,10 @@ + (RCTBridge *)getBridge {
 	return [[ReactNativeNavigation sharedInstance].bridgeManager bridge];
 }
 
++ (UIViewController *)findViewController:(NSString *)componentId {
+    RNNStore *store = [[ReactNativeNavigation sharedInstance].bridgeManager store];
+    return [store findComponentForId:componentId];
+}
 
 # pragma mark - instance
 
