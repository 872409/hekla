patch-package
--- a/node_modules/react-native-navigation/lib/ios/RNNBottomTabsOptions.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNBottomTabsOptions.h
@@ -11,6 +11,7 @@
 
 @property (nonatomic, strong) NSNumber* tabColor;
 @property (nonatomic, strong) NSNumber* selectedTabColor;
+@property (nonatomic, strong) NSString* barStyle;
 @property (nonatomic, strong) NSNumber* translucent;
 @property (nonatomic, strong) NSNumber* hideShadow;
 @property (nonatomic, strong) NSNumber* backgroundColor;
--- a/node_modules/react-native-navigation/lib/ios/RNNBottomTabsOptions.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNBottomTabsOptions.m
@@ -38,6 +38,11 @@ - (void)applyOn:(UIViewController *)viewController {
 	} else {
 		viewController.tabBarController.tabBar.barTintColor = nil;
 	}
+	if (self.barStyle) {
+		viewController.tabBarController.tabBar.barStyle = [RCTConvert UIBarStyle:self.barStyle];
+	} else {
+		viewController.tabBarController.tabBar.barStyle = UIBarStyleDefault;
+	}
 	
 	if (self.translucent) {
 		viewController.tabBarController.tabBar.translucent = [self.translucent boolValue];
--- a/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.h
@@ -1,6 +1,7 @@
 #import <Foundation/Foundation.h>
 #import <React/RCTBridge.h>
 #import "RNNBridgeManagerDelegate.h"
+#import "RNNStore.h"
 
 typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBridge* bridge);
 
@@ -11,5 +12,6 @@ typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBri
 - (void)registerExternalComponent:(NSString *)name callback:(RNNExternalViewCreator)callback;
 
 @property (readonly, nonatomic, strong) RCTBridge *bridge;
+@property (readonly, nonatomic, strong) RNNStore *store;
 
 @end
--- a/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNBridgeManager.m
@@ -12,6 +12,7 @@
 @interface RNNBridgeManager() <RCTBridgeDelegate>
 
 @property (nonatomic, strong, readwrite) RCTBridge *bridge;
+@property (nonatomic, strong, readwrite) RNNStore *store;
 
 @end
 
--- a/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
@@ -101,16 +101,12 @@ -(void)push:(NSString*)componentId layout:(NSDictionary*)layout completion:(RNNT
 	RNNRootViewController *newVc = (RNNRootViewController *)[_controllerFactory createLayoutAndSaveToStore:layout];
 	UIViewController *fromVC = [_store findComponentForId:componentId];
 	
-	if (newVc.options.preview.elementId) {
+	if (newVc.options.preview.reactTag) {
 		UIViewController* vc = [_store findComponentForId:componentId];
 
 		if([vc isKindOfClass:[RNNRootViewController class]]) {
 			RNNRootViewController* rootVc = (RNNRootViewController*)vc;
 			rootVc.previewController = newVc;
-
-			RNNElementFinder* elementFinder = [[RNNElementFinder alloc] initWithFromVC:vc];
-			RNNElementView* elementView = [elementFinder findElementForId:newVc.options.preview.elementId];
-
 			CGSize size = CGSizeMake(rootVc.view.frame.size.width, rootVc.view.frame.size.height);
 			
 			if (newVc.options.preview.width) {
@@ -125,7 +121,10 @@ -(void)push:(NSString*)componentId layout:(NSDictionary*)layout completion:(RNNT
 				newVc.preferredContentSize = size;
 			}
 
-			[rootVc registerForPreviewingWithDelegate:(id)rootVc sourceView:elementView];
+			RCTExecuteOnMainQueue(^{
+				UIView *view = [[ReactNativeNavigation getBridge].uiManager viewForReactTag:newVc.options.preview.reactTag];
+				[rootVc registerForPreviewingWithDelegate:(id)rootVc sourceView:view];
+			});
 		}
 	} else {
 		[newVc onReactViewReady:^{
--- a/node_modules/react-native-navigation/lib/ios/RNNPreviewOptions.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNPreviewOptions.h
@@ -2,7 +2,7 @@
 
 @interface RNNPreviewOptions : RNNOptions
 
-@property (nonatomic, strong) NSString* elementId;
+@property (nonatomic, strong) NSNumber* reactTag;
 @property (nonatomic, strong) NSNumber* width;
 @property (nonatomic, strong) NSNumber* height;
 @property (nonatomic, strong) NSNumber* commit;
--- a/node_modules/react-native-navigation/lib/ios/RNNRootViewController.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewController.h
@@ -12,6 +12,7 @@
 @class RNNRootViewController;
 
 typedef void (^RNNReactViewReadyCompletionBlock)(void);
+typedef void(^PreviewCallback)(UIViewController *vc);
 
 @interface RNNRootViewController : UIViewController	<RNNRootViewProtocol, UIViewControllerPreviewingDelegate, UISearchResultsUpdating, UISearchBarDelegate>
 
@@ -22,6 +23,7 @@ typedef void (^RNNReactViewReadyCompletionBlock)(void);
 @property (nonatomic) id<RNNRootViewCreator> creator;
 @property (nonatomic, strong) RNNAnimator* animator;
 @property (nonatomic, strong) UIViewController* previewController;
+@property (nonatomic, copy) PreviewCallback previewCallback;
 
 
 -(instancetype)initWithName:(NSString*)name
--- a/node_modules/react-native-navigation/lib/ios/RNNRootViewController.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNRootViewController.m
@@ -22,6 +22,8 @@ @interface RNNRootViewController() {
 
 @implementation RNNRootViewController
 
+@synthesize previewCallback;
+
 -(instancetype)initWithName:(NSString*)name
 				withOptions:(RNNNavigationOptions*)options
 			withComponentId:(NSString*)componentId
@@ -281,28 +283,22 @@ - (void)orientationDidChange:(NSNotification*)notification {
 
 - (UIViewController *)previewingContext:(id<UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location{
 	if (self.previewController) {
-		RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
-		[_eventEmitter sendOnNavigationEvent:@"previewContext" params:@{
-																		@"previewComponentId": vc.componentId,
-																		@"componentId": self.componentId
-																		}];
+    if ([self.previewController isKindOfClass:[RNNRootViewController class]]) {
+      RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
+      [_eventEmitter sendOnNavigationEvent:@"previewContext" params:@{
+                                      @"previewComponentId": vc.componentId,
+                                      @"componentId": self.componentId
+                                      }];
+    }
 	}
 	return self.previewController;
 }
 
 
 - (void)previewingContext:(id<UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit {
-	RNNRootViewController * vc = (RNNRootViewController*) self.previewController;
-	NSDictionary * params = @{
-							  @"previewComponentId": vc.componentId,
-							  @"componentId": self.componentId
-							  };
-	if (vc.options.preview.commit) {
-		[_eventEmitter sendOnNavigationEvent:@"previewCommit" params:params];
-		[self.navigationController pushViewController:vc animated:false];
-	} else {
-		[_eventEmitter sendOnNavigationEvent:@"previewDismissed" params:params];
-	}
+  if (self.previewCallback) {
+		self.previewCallback(self);
+  }
 }
 
 - (void)onActionPress:(NSString *)id {
--- a/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.h
+++ b/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.h
@@ -13,6 +13,7 @@
 @property (nonatomic, strong) NSNumber* visible;
 @property (nonatomic, strong) NSNumber* hideOnScroll;
 @property (nonatomic, strong) NSNumber* buttonColor;
+@property (nonatomic, strong) NSString* barStyle;
 @property (nonatomic, strong) NSNumber* translucent;
 @property (nonatomic, strong) NSNumber* transparent;
 @property (nonatomic, strong) NSNumber* drawBehind;
--- a/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNTopBarOptions.m
@@ -116,6 +116,11 @@ - (void)applyOn:(UIViewController*)viewController {
 	} else {
 		disableTopBarTransparent();
 	}
+	if (self.barStyle) {
+		viewController.navigationController.navigationBar.barStyle = [RCTConvert UIBarStyle:self.barStyle];
+	} else {
+		viewController.navigationController.navigationBar.barStyle = UIBarStyleDefault;
+	}
 	
 	if (self.translucent) {
 		viewController.navigationController.navigationBar.translucent = [self.translucent boolValue];
--- a/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.h
+++ b/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.h
@@ -15,4 +15,6 @@ typedef UIViewController * (^RNNExternalViewCreator)(NSDictionary* props, RCTBri
 
 + (RCTBridge *)getBridge;
 
++ (UIViewController *)findViewController:(NSString *)componentId;
+
 @end
--- a/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.m
+++ b/node_modules/react-native-navigation/lib/ios/ReactNativeNavigation.m
@@ -31,6 +31,10 @@ + (RCTBridge *)getBridge {
 	return [[ReactNativeNavigation sharedInstance].bridgeManager bridge];
 }
 
++ (UIViewController *)findViewController:(NSString *)componentId {
+  RNNStore *store = [[ReactNativeNavigation sharedInstance].bridgeManager store];
+  return [store findComponentForId:componentId];
+}
 
 # pragma mark - instance
 
